@import "tailwindcss";
@import "./theme.css";
@import "../components/ui/container.css";

/* IBM Plex Sans font-face declarations */
@font-face {
  font-family: 'IBM Plex Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url('/fonts/IBMPlexSans-Regular.woff2') format('woff2');
}

@font-face {
  font-family: 'IBM Plex Sans';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url('/fonts/IBMPlexSans-Medium.woff2') format('woff2');
}

@font-face {
  font-family: 'IBM Plex Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url('/fonts/IBMPlexSans-Bold.woff2') format('woff2');
}

/* Base styles */
html {
  font-size: 16px;
}

body {
  min-height: 100vh;
  font-family: 'IBM Plex Sans', sans-serif;
  background-color: var(--background);
  color: var(--foreground);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  padding: 0;
  transition: background-color 0.2s ease, color 0.2s ease;
}

/* Typography classes */
.text-display {
  font-size: var(--font-display-size);
  line-height: var(--font-display-line-height);
}

.text-heading {
  font-size: var(--font-heading-size);
  line-height: var(--font-heading-line-height);
}

.text-subheading {
  font-size: var(--font-subheading-size);
  line-height: var(--font-subheading-line-height);
}

.text-body {
  font-size: var(--font-body-size);
  line-height: var(--font-body-line-height);
}

/* Font weight classes */
.font-regular {
  font-weight: var(--font-regular);
}

.font-medium {
  font-weight: var(--font-medium);
}

.font-bold {
  font-weight: var(--font-bold);
}

/* Grid layout */
.grid-container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  width: 100%;
}

/* Ensure max-width for prose */
.max-w-prose {
  max-width: 72ch;
}

/* Color utilities */
/* Theme-aware semantic classes */
.bg-theme {
  background-color: var(--background);
}

.text-theme {
  color: var(--foreground);
}

/* Legacy names but using theme variables - maintained for backward compatibility */
.bg-ink {
  background-color: var(--background);
}

.text-chalk {
  color: var(--foreground);
}

.text-purple {
  color: var(--accent);
}

.bg-cobalt {
  background-color: var(--primary);
}

/* Spacing */
.mt-vertical-lg, .my-vertical-lg {
  margin-top: var(--spacing-vertical-lg);
}

.mb-vertical-lg, .my-vertical-lg {
  margin-bottom: var(--spacing-vertical-lg);
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.animate-fade-in {
  animation: fadeIn var(--animation-fade-duration) var(--animation-fade-timing) forwards;
  animation-fill-mode: both;
  opacity: 0;
}

/* Input placeholder styles - explicitly set for both themes */
::placeholder {
  color: rgba(250, 250, 250, 0.8) !important; /* Light color for dark mode - increased opacity for better contrast */
  opacity: 1;
}

.light ::placeholder {
  color: rgba(18, 18, 18, 0.7) !important; /* Dark color for light mode */
  opacity: 1;
}

/* Button styles */
button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: 'IBM Plex Sans', sans-serif;
  border: none;
  overflow: hidden;
}

/* We're removing custom button styling from globals.css
   Button styling should be handled entirely by the Button component */

.bg-cobalt-light {
  background-color: var(--color-cobalt-light);
}

.btn-cta:hover {
  background-color: var(--color-cobalt-light);
}

.btn-cta:focus-visible {
  outline: var(--focus-outline-width) solid var(--focus-outline-color);
  outline-offset: 2px;
  border-radius: var(--focus-outline-radius);
}
